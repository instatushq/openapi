{
  "openapi": "3.0.3",
  "info": {
    "title": "Instatus API",
    "version": "2.0.0",
    "description": "API for managing status pages, components, incidents, and more on Instatus.\n\n- All endpoints are generally follow the REST architecture.\n- All requests must be encoded as JSON with the \"Content-Type: application/json header\".\n- Responses from the Instatus API, including errors, are encoded as JSON as well.\n- Requests to Instatus API must provide an API token through the Authorization header.\n- You can get your API key from User settings developer settings: https://dashboard.instatus.com/developer\n"
  },
  "servers": [
    {
      "url": "https://api.instatus.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Status Pages"
    },
    {
      "name": "Components"
    },
    {
      "name": "Incidents"
    },
    {
      "name": "Incident Updates"
    },
    {
      "name": "Maintenances"
    },
    {
      "name": "Maintenance Updates"
    },
    {
      "name": "Templates"
    },
    {
      "name": "Teammates"
    },
    {
      "name": "Subscribers"
    },
    {
      "name": "Metrics"
    },
    {
      "name": "User Profile"
    },
    {
      "name": "Public Data"
    },
    {
      "name": "Audience Groups"
    },
    {
      "name": "Private Pages"
    },
    {
      "name": "Monitors"
    },
    {
      "name": "Routing Rules"
    },
    {
      "name": "Escalation Policies"
    },
    {
      "name": "On Call Schedules"
    }
  ],
  "paths": {
    "/v2/pages": {
      "get": {
        "summary": "Get your status pages",
        "description": "Retrieve a list of your status pages or Get your status page secure link\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n\nIf your account has member / owner access to a private status page with secure links enabled, \nyou're allowed to get the secure link to your page. (you will get a secureLink property in the response)\n",
        "tags": [
          "Status Pages"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusPage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/pages": {
      "post": {
        "summary": "Create a status page",
        "description": "Create a new status page",
        "tags": [
          "Status Pages"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStatusPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/{page_id}": {
      "put": {
        "summary": "Update a status page",
        "description": "Update an existing status page",
        "tags": [
          "Status Pages"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusPageResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a status page",
        "description": "Delete an existing status page",
        "tags": [
          "Status Pages"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/components": {
      "get": {
        "summary": "Get all your status page components",
        "description": "Retrieve a list of components for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Components"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Component"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a component",
        "description": "Create a new component for a specific status page",
        "tags": [
          "Components"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComponentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/components/{component_id}": {
      "get": {
        "summary": "Get a component",
        "description": "Retrieve a specific component",
        "tags": [
          "Components"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "component_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the component"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a component",
        "description": "Update an existing component",
        "tags": [
          "Components"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "component_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the component"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComponentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a component",
        "description": "Delete an existing component",
        "tags": [
          "Components"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "component_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the component"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/incidents": {
      "get": {
        "summary": "Get all page incidents",
        "description": "Retrieve a list of incidents for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Incidents"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of statuses to include"
          },
          {
            "in": "query",
            "name": "!status",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of statuses to exclude"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an incident",
        "description": "Create a new incident for a specific status page",
        "tags": [
          "Incidents"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/incidents/{incident_id}": {
      "get": {
        "summary": "Get an incident",
        "description": "Retrieve a specific incident",
        "tags": [
          "Incidents"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update incident",
        "description": "Update an existing incident",
        "tags": [
          "Incidents"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIncidentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete incident",
        "description": "Delete an existing incident",
        "tags": [
          "Incidents"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/incidents/{template}": {
      "post": {
        "summary": "Add an incident with a template",
        "description": "Create a new incident using a template",
        "tags": [
          "Incidents"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "template",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID or name of the template to use"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentWithTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/incidents/{incident_id}/incident-updates/{incident_update_id}": {
      "get": {
        "summary": "Get an incident update",
        "description": "Retrieve a specific incident update",
        "tags": [
          "Incident Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          },
          {
            "in": "path",
            "name": "incident_update_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdateDetailed"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit an incident update",
        "description": "Update an existing incident update",
        "tags": [
          "Incident Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          },
          {
            "in": "path",
            "name": "incident_update_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIncidentUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdateDetailed"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an incident update",
        "description": "Delete an existing incident update",
        "tags": [
          "Incident Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          },
          {
            "in": "path",
            "name": "incident_update_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/incidents/{incident_id}/incident-updates": {
      "post": {
        "summary": "Add an incident update",
        "description": "Create a new incident update",
        "tags": [
          "Incident Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIncidentUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdateDetailed"
                }
              }
            }
          }
        }
      }
    },
    "/v2/{page_id}/incidents/{incident_id}/incident-updates/{template}": {
      "post": {
        "summary": "Resolve an incident with a template",
        "description": "Resolve an incident using a template",
        "tags": [
          "Incident Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "incident_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the incident"
          },
          {
            "in": "path",
            "name": "template",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID or name of the template to use"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentUpdateWithTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/maintenances": {
      "get": {
        "summary": "Get all page maintenances",
        "description": "Retrieve a list of maintenances for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Maintenances"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Maintenance"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a maintenance",
        "description": "Create a new maintenance for a specific status page",
        "tags": [
          "Maintenances"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMaintenanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maintenance"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/maintenances/{maintenance_id}": {
      "get": {
        "summary": "Get a maintenance",
        "description": "Retrieve a specific maintenance",
        "tags": [
          "Maintenances"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maintenance"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update maintenance",
        "description": "Update an existing maintenance",
        "tags": [
          "Maintenances"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMaintenanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maintenance"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete maintenance",
        "description": "Delete an existing maintenance",
        "tags": [
          "Maintenances"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/maintenances/{maintenance_id}/maintenance-updates/{maintenance_update_id}": {
      "get": {
        "summary": "Get a maintenance update",
        "description": "Retrieve a specific maintenance update",
        "tags": [
          "Maintenance Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          },
          {
            "in": "path",
            "name": "maintenance_update_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceUpdateDetailed"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit a maintenance update",
        "description": "Update an existing maintenance update",
        "tags": [
          "Maintenance Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          },
          {
            "in": "path",
            "name": "maintenance_update_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMaintenanceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceUpdateDetailed"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a maintenance update",
        "description": "Delete an existing maintenance update",
        "tags": [
          "Maintenance Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          },
          {
            "in": "path",
            "name": "maintenance_update_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/maintenances/{maintenance_id}/maintenance-updates": {
      "post": {
        "summary": "Add a maintenance update",
        "description": "Create a new maintenance update",
        "tags": [
          "Maintenance Updates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "maintenance_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the maintenance"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMaintenanceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceUpdateDetailed"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/templates": {
      "get": {
        "summary": "Get all page templates",
        "description": "Retrieve a list of templates for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a template",
        "description": "Create a new template for a specific status page",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/templates/{template_id}": {
      "get": {
        "summary": "Get a template",
        "description": "Retrieve a specific template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "template_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the template"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update template",
        "description": "Update an existing template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "template_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the template"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete template",
        "description": "Delete an existing template",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "template_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the template"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/team": {
      "get": {
        "summary": "Get teammates",
        "description": "Retrieve a list of team members for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Teammates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Teammate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a team member",
        "description": "Add a new team member to a specific status page",
        "tags": [
          "Teammates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTeammateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeammateDetail"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/team/{member_id}": {
      "delete": {
        "summary": "Delete a team member",
        "description": "Remove a team member from a specific status page",
        "tags": [
          "Teammates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "member_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the team member"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "memberId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/subscribers": {
      "get": {
        "summary": "Get subscribers",
        "description": "Retrieve a list of subscribers for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Subscribers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscriber"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a subscriber",
        "description": "Add a new subscriber to a specific status page",
        "tags": [
          "Subscribers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSubscriberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberDetail"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/subscribers/{subscriber_id}": {
      "delete": {
        "summary": "Remove a subscriber",
        "description": "Remove a subscriber from a specific status page",
        "tags": [
          "Subscribers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "subscriber_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the subscriber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemovedSubscriber"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/metrics": {
      "get": {
        "summary": "Get all metrics",
        "description": "Retrieve a list of metrics for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a metric",
        "description": "Add a new metric to a specific status page",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/metrics/{metric_id}": {
      "get": {
        "summary": "Get a metric",
        "description": "Retrieve a specific metric",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "metric_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the metric"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a metric",
        "description": "Update an existing metric",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "metric_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the metric"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a metric",
        "description": "Delete an existing metric",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "metric_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the metric"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedMetric"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a datapoint to a metric",
        "description": "Add a single datapoint to a specific metric",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "metric_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the metric"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDatapointRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datapoint"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/metrics/{metric_id}/data": {
      "post": {
        "summary": "Add multiple datapoints to a metric",
        "description": "Add multiple datapoints to a specific metric",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "metric_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the metric"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMultipleDatapointsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Datapoint"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete datapoints from a metric",
        "description": "Delete all datapoints from a specific metric",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "metric_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the metric"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedDatapoints"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "summary": "Get your user profile",
        "description": "Retrieve the profile information of the authenticated user",
        "tags": [
          "User Profile"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProfile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/summary.json": {
      "get": {
        "summary": "Get public status summary",
        "description": "Retrieve the current status summary of the status page \n- The base url is your status page url\n- An example is https://instat.us/summary.json\n",
        "tags": [
          "Public Data"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicStatusSummary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/audience-groups": {
      "get": {
        "summary": "Get all your status page audience groups",
        "description": "Retrieve a list of audience groups for a specific status page.\nThe default page number is 1.\nThe default per_page number is 50 and the maximum is 100 items per page.\n",
        "tags": [
          "Audience Groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an audience group",
        "description": "Create a new audience group for a specific status page",
        "tags": [
          "Audience Groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAudienceGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedAudienceGroup"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/audience-groups/{audience_group_id}": {
      "get": {
        "summary": "Get an audience group",
        "description": "Retrieve a specific audience group",
        "tags": [
          "Audience Groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "audience_group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the audience group"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an audience group",
        "description": "Update an existing audience group",
        "tags": [
          "Audience Groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "audience_group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the audience group"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAudienceGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatedAudienceGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an audience group",
        "description": "Delete an existing audience group",
        "tags": [
          "Audience Groups"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          },
          {
            "in": "path",
            "name": "audience_group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the audience group"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedAudienceGroup"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{page_id}/regenerate-secure-link": {
      "post": {
        "summary": "Regenerate your secure link",
        "description": "Regenerate the secure link for a specific status page",
        "tags": [
          "Private Pages"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the status page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurePageLink"
                }
              }
            }
          }
        }
      }
    },
    "/monitors/check_inserted_logs": {
      "get": {
        "summary": "Check Inserted Logs",
        "tags": [
          "Monitors"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{page_id}/monitors": {
      "get": {
        "summary": "Get Monitors",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of monitors per page",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search term for filtering results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "UP",
                "DOWN",
                "UNKNOWN",
                "DEGRADED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Monitor"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors": {
      "post": {
        "summary": "Create a Monitor",
        "tags": [
          "Monitors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMonitorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/monitors/{id}": {
      "put": {
        "summary": "Update a Monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMonitorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors/{id}/logs": {
      "get": {
        "summary": "Get Monitor Logs",
        "description": "Retrieve logs for a specific monitor",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the monitor"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            },
            "description": "The number of items per page. Cannot exceed 1000."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number to retrieve."
          },
          {
            "in": "query",
            "name": "monitorId",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the monitor."
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            },
            "description": "The location of the monitor."
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object",
                  "properties": {
                    "gte": {
                      "type": "string"
                    },
                    "lte": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "description": "The creation date. Can be a string, a number, or an object with gte and lte fields."
          },
          {
            "in": "query",
            "name": "isSuccessful",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether the check was successful."
          },
          {
            "in": "query",
            "name": "isSSLCheck",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether the check is an SSL check."
          },
          {
            "in": "query",
            "name": "httpStatusCode",
            "schema": {
              "type": "string"
            },
            "description": "The HTTP status code of the response."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "UP",
                "DOWN",
                "UNKNOWN",
                "DEGRADED"
              ]
            },
            "description": "The status of the monitor."
          },
          {
            "in": "query",
            "name": "dnsTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Time taken for DNS resolution."
          },
          {
            "in": "query",
            "name": "tcpTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Time taken for TCP connection."
          },
          {
            "in": "query",
            "name": "tlsTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Time taken for TLS handshake."
          },
          {
            "in": "query",
            "name": "firstByteTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Time taken for the first byte to be received."
          },
          {
            "in": "query",
            "name": "downloadTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Time taken for the download."
          },
          {
            "in": "query",
            "name": "responseTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Total response time."
          },
          {
            "in": "query",
            "name": "performanceTime",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Performance time."
          },
          {
            "in": "query",
            "name": "accessabilityScore",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Accessibility score."
          },
          {
            "in": "query",
            "name": "seoScore",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "SEO score."
          },
          {
            "in": "query",
            "name": "bestPracticesScore",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Best practices score."
          },
          {
            "in": "query",
            "name": "successfulAssertions",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                }
              ]
            },
            "description": "Number of successful assertions."
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "chronologically"
            },
            "description": "Field to sort by."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitorLogs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MonitorLog"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors/{id}/run": {
      "get": {
        "summary": "Run Monitor Check",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location",
            "description": "The location of the monitor. Must be one of the specified values.",
            "schema": {
              "type": "string",
              "enum": [
                "US_EAST_1",
                "EU_CENTRAL_1",
                "AP_NORTHEAST_1",
                "AP_SOUTHEAST_2"
              ]
            }
          },
          {
            "in": "query",
            "name": "retry",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "monitorLogId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitor-alerts": {
      "post": {
        "summary": "Create Monitor Alert",
        "tags": [
          "Monitors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMonitorAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorAlertResponse"
                }
              }
            }
          }
        }
      }
    },
    "/monitor-alerts/{id}": {
      "put": {
        "summary": "Update Monitor Alert",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMonitorAlertRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorAlertResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Monitor Alert",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{page_id}/monitor-alerts": {
      "get": {
        "summary": "Get Monitor Alerts",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitorAlerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MonitorAlert"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors-groups": {
      "post": {
        "summary": "Create Monitor Group",
        "tags": [
          "Monitors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMonitorGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorGroupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/monitors-groups/{id}": {
      "put": {
        "summary": "Update Monitor Group",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMonitorGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorGroupResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Monitor Group",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors-groups/{id}/monitors": {
      "post": {
        "summary": "Add Monitors to Group",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monitors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors-groups/{id}/run": {
      "get": {
        "summary": "Run Monitor Group Check",
        "tags": [
          "Monitors"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string",
              "enum": [
                "US_EAST_1",
                "EU_CENTRAL_1",
                "AP_NORTHEAST_1",
                "AP_SOUTHEAST_2"
              ]
            }
          },
          {
            "in": "query",
            "name": "retry",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "monitorLogId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    },
                    "monitorLogId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{page_id}/routing-rules": {
      "get": {
        "summary": "Get Routing Rules",
        "tags": [
          "Routing Rules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingRulesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/routing-rules": {
      "post": {
        "summary": "Create Routing Rule",
        "description": "Keep in mind in actions `targetId` can be a workspace member email or a team id depending on the type of the action.",
        "tags": [
          "Routing Rules"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoutingRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingRuleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/routing-rules/{id}": {
      "put": {
        "summary": "Update Routing Rule",
        "tags": [
          "Routing Rules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoutingRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingRuleResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Routing Rule",
        "tags": [
          "Routing Rules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRoutingRuleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{page_id}/escalation-policies": {
      "get": {
        "summary": "Get Escalation Policies",
        "tags": [
          "Escalation Policies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EscalationPoliciesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/escalation-policies": {
      "post": {
        "summary": "Create Escalation Policy",
        "tags": [
          "Escalation Policies"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEscalationPolicyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EscalationPolicyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/escalation-policies/{id}": {
      "put": {
        "summary": "Update Escalation Policy",
        "tags": [
          "Escalation Policies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEscalationPolicyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EscalationPolicyResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Escalation Policy",
        "tags": [
          "Escalation Policies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEscalationPolicyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/on-call-schedules": {
      "post": {
        "summary": "Create On-call Schedule",
        "tags": [
          "On Call Schedules"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnCallScheduleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnCallScheduleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/on-call-schedules/{id}": {
      "put": {
        "summary": "Update On-call Schedule",
        "tags": [
          "On Call Schedules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOnCallScheduleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnCallScheduleResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete On-call Schedule",
        "tags": [
          "On Call Schedules"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "PageStatus": {
        "type": "string",
        "enum": [
          "UP",
          "HASISSUES",
          "ALLUNDERMAINTENANCE",
          "ALLDEGRADEDPERFORMANCE",
          "ALLPARTIALOUTAGE",
          "ALLMINOROUTAGE",
          "ALLMAJOROUTAGE",
          "SOMEUNDERMAINTENANCE",
          "SOMEDEGRADEDPERFORMANCE",
          "SOMEPARTIALOUTAGE",
          "SOMEMINOROUTAGE",
          "SOMEMAJOROUTAGE",
          "ONEUNDERMAINTENANCE",
          "ONEDEGRADEDPERFORMANCE",
          "ONEPARTIALOUTAGE",
          "ONEMINOROUTAGE",
          "ONEMAJOROUTAGE"
        ]
      },
      "ComponentStatus": {
        "type": "string",
        "enum": [
          "OPERATIONAL",
          "UNDERMAINTENANCE",
          "DEGRADEDPERFORMANCE",
          "PARTIALOUTAGE",
          "MAJOROUTAGE"
        ]
      },
      "IncidentStatus": {
        "type": "string",
        "enum": [
          "INVESTIGATING",
          "IDENTIFIED",
          "MONITORING",
          "RESOLVED"
        ]
      },
      "MaintenanceStatus": {
        "type": "string",
        "enum": [
          "NOTSTARTEDYET",
          "INPROGRESS",
          "COMPLETED"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "Translations": {
        "type": "object",
        "description": "Object containing translations where each key is a property name and the value is an object with language codes as keys and translations as values. The language code as the key (e.g., 'en', 'fr') and the translation as the value.",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "example": {
          "name": {
            "en": "This will be displayed for English users",
            "fr": "Ceci sera affiché pour les utilisateurs francophones"
          },
          "description": {
            "en": "Example description in English",
            "fr": "Exemple de description en français"
          }
        }
      },
      "StatusPage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "faviconUrl": {
            "type": "string",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "nullable": true
          },
          "customDomain": {
            "type": "string",
            "nullable": true
          },
          "publicEmail": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "subscribeBySms": {
            "type": "boolean",
            "nullable": true
          },
          "language": {
            "type": "string"
          },
          "useLargeHeader": {
            "type": "boolean"
          },
          "brandColor": {
            "type": "string"
          },
          "okColor": {
            "type": "string"
          },
          "disruptedColor": {
            "type": "string",
            "nullable": true
          },
          "degradedColor": {
            "type": "string",
            "nullable": true
          },
          "downColor": {
            "type": "string",
            "nullable": true
          },
          "noticeColor": {
            "type": "string",
            "nullable": true
          },
          "unknownColor": {
            "type": "string",
            "nullable": true
          },
          "googleAnalytics": {
            "type": "string",
            "nullable": true
          },
          "smsService": {
            "type": "string",
            "nullable": true
          },
          "htmlInMeta": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowSummary": {
            "type": "string",
            "nullable": true
          },
          "launchDate": {
            "type": "string",
            "nullable": true
          },
          "cssGlobal": {
            "type": "string",
            "nullable": true
          },
          "onboarded": {
            "type": "boolean",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "secureLink": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "CreateStatusPageRequest": {
        "type": "object",
        "required": [
          "email",
          "name",
          "subdomain"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logoUrl": {
            "type": "string"
          },
          "faviconUrl": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "useLargeHeader": {
            "type": "boolean"
          },
          "brandColor": {
            "type": "string"
          },
          "okColor": {
            "type": "string"
          },
          "disruptedColor": {
            "type": "string"
          },
          "degradedColor": {
            "type": "string"
          },
          "downColor": {
            "type": "string"
          },
          "noticeColor": {
            "type": "string"
          },
          "unknownColor": {
            "type": "string"
          },
          "googleAnalytics": {
            "type": "string"
          },
          "subscribeBySms": {
            "type": "boolean"
          },
          "smsService": {
            "type": "string"
          },
          "twilioSid": {
            "type": "string"
          },
          "twilioToken": {
            "type": "string"
          },
          "twilioSender": {
            "type": "string"
          },
          "esendexUsername": {
            "type": "string"
          },
          "esendexPassword": {
            "type": "string"
          },
          "esendexAccountRef": {
            "type": "string"
          },
          "nexmoKey": {
            "type": "string",
            "nullable": true
          },
          "nexmoSecret": {
            "type": "string",
            "nullable": true
          },
          "nexmoSender": {
            "type": "string",
            "nullable": true
          },
          "htmlInMeta": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowSummary": {
            "type": "string",
            "nullable": true
          },
          "cssGlobal": {
            "type": "string",
            "nullable": true
          },
          "launchDate": {
            "type": "string",
            "nullable": true
          },
          "dateFormat": {
            "type": "string"
          },
          "dateFormatShort": {
            "type": "string"
          },
          "timeFormat": {
            "type": "string"
          }
        }
      },
      "UpdateStatusPageRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "subdomain": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "faviconUrl": {
            "type": "string"
          },
          "websiteUrl": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "publicEmail": {
            "type": "string"
          },
          "useLargeHeader": {
            "type": "boolean"
          },
          "brandColor": {
            "type": "string"
          },
          "okColor": {
            "type": "string"
          },
          "disruptedColor": {
            "type": "string"
          },
          "degradedColor": {
            "type": "string"
          },
          "downColor": {
            "type": "string"
          },
          "noticeColor": {
            "type": "string"
          },
          "unknownColor": {
            "type": "string"
          },
          "googleAnalytics": {
            "type": "string"
          },
          "subscribeBySms": {
            "type": "boolean"
          },
          "smsService": {
            "type": "string"
          },
          "twilioSid": {
            "type": "string"
          },
          "twilioToken": {
            "type": "string"
          },
          "twilioSender": {
            "type": "string"
          },
          "esendexUsername": {
            "type": "string"
          },
          "esendexPassword": {
            "type": "string"
          },
          "esendexAccountRef": {
            "type": "string"
          },
          "nexmoKey": {
            "type": "string",
            "nullable": true
          },
          "nexmoSecret": {
            "type": "string",
            "nullable": true
          },
          "nexmoSender": {
            "type": "string",
            "nullable": true
          },
          "htmlInMeta": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowSummary": {
            "type": "string",
            "nullable": true
          },
          "cssGlobal": {
            "type": "string",
            "nullable": true
          },
          "launchDate": {
            "type": "string",
            "nullable": true
          },
          "dateFormat": {
            "type": "string"
          },
          "dateFormatShort": {
            "type": "string"
          },
          "timeFormat": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "useAllowList": {
            "type": "boolean"
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "StatusPageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "subdomain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "faviconUrl": {
            "type": "string",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "googleAnalytics": {
            "type": "string",
            "nullable": true
          },
          "publicEmail": {
            "type": "string",
            "nullable": true
          },
          "customDomain": {
            "type": "string",
            "nullable": true
          },
          "useLargeHeader": {
            "type": "boolean"
          },
          "disableDarkMode": {
            "type": "boolean",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "nullable": true
          },
          "subscribeBySms": {
            "type": "boolean",
            "nullable": true
          },
          "brandColor": {
            "type": "string",
            "nullable": true
          },
          "okColor": {
            "type": "string",
            "nullable": true
          },
          "disruptedColor": {
            "type": "string",
            "nullable": true
          },
          "downColor": {
            "type": "string",
            "nullable": true
          },
          "degradedColor": {
            "type": "string",
            "nullable": true
          },
          "noticeColor": {
            "type": "string",
            "nullable": true
          },
          "htmlInMeta": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowHeader": {
            "type": "string",
            "nullable": true
          },
          "htmlAboveFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowFooter": {
            "type": "string",
            "nullable": true
          },
          "htmlBelowSummary": {
            "type": "string",
            "nullable": true
          },
          "cssGlobal": {
            "type": "string",
            "nullable": true
          },
          "onboarded": {
            "type": "boolean",
            "nullable": true
          },
          "launchDate": {
            "type": "string",
            "nullable": true
          },
          "dateFormat": {
            "type": "string"
          },
          "dateFormatShort": {
            "type": "string"
          },
          "timeFormat": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "useAllowList": {
            "type": "boolean"
          },
          "allowList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Component"
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "Component": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uniqueEmail": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "order": {
            "type": "integer",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "nameTranslationId": {
            "type": "string",
            "nullable": true
          },
          "descriptionTranslationId": {
            "type": "string",
            "nullable": true
          },
          "showUptime": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "archivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "siteId": {
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "nameHtml": {
            "type": "string",
            "nullable": true
          },
          "nameHtmlTranslationId": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtml": {
            "type": "string",
            "nullable": true
          },
          "descriptionHtmlTranslationId": {
            "type": "string",
            "nullable": true
          },
          "isThirdParty": {
            "type": "boolean"
          },
          "thirdPartyStatus": {
            "type": "string",
            "nullable": true
          },
          "thirdPartyComponentId": {
            "type": "string",
            "nullable": true
          },
          "thirdPartyComponentServiceId": {
            "type": "string",
            "nullable": true
          },
          "importedFromStatuspage": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nameTranslation": {
            "type": "object",
            "nullable": true
          },
          "descriptionTranslation": {
            "type": "object",
            "nullable": true
          },
          "incidents": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "CreateComponentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "order": {
            "type": "integer"
          },
          "showUptime": {
            "type": "boolean"
          },
          "grouped": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "UpdateComponentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "order": {
            "type": "integer"
          },
          "showUptime": {
            "type": "boolean"
          },
          "grouped": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentUpdate"
            }
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentComponent"
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "IncidentUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageHtml": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IncidentComponent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "showUptime": {
            "type": "boolean"
          },
          "site": {
            "$ref": "#/components/schemas/IncidentSite"
          }
        }
      },
      "IncidentSite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "publicEmail": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateIncidentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/IncidentStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "UpdateIncidentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/IncidentStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "IncidentWithTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameTranslationId": {
            "type": "string",
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "resolved": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "automated": {
            "type": "boolean"
          },
          "impact": {
            "type": "string"
          },
          "appId": {
            "type": "string",
            "nullable": true
          },
          "siteId": {
            "type": "string"
          },
          "importedFromStatuspage": {
            "type": "boolean"
          }
        }
      },
      "IncidentUpdateDetailed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageHtml": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "incident": {
            "$ref": "#/components/schemas/IncidentBrief"
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "IncidentBrief": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentBrief"
            }
          }
        }
      },
      "ComponentBrief": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "showUptime": {
            "type": "boolean"
          },
          "site": {
            "$ref": "#/components/schemas/SiteBrief"
          },
          "subscribers": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "SiteBrief": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "slackIntegrations": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "publicEmail": {
            "type": "string",
            "nullable": true
          },
          "subscribers": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "CreateIncidentUpdateRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/IncidentStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "UpdateIncidentUpdateRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/IncidentStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "IncidentUpdateWithTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageTranslationId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "incidentId": {
            "type": "string"
          },
          "messageHtml": {
            "type": "string"
          },
          "messageHtmlTranslationId": {
            "type": "string",
            "nullable": true
          },
          "importedFromStatuspage": {
            "type": "boolean"
          }
        }
      },
      "Maintenance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "notifyStart": {
            "type": "boolean"
          },
          "notifyEnd": {
            "type": "boolean"
          },
          "notifyEarly": {
            "type": "boolean"
          },
          "notifyMinutes": {
            "type": "integer"
          },
          "autoStart": {
            "type": "boolean"
          },
          "autoEnd": {
            "type": "boolean"
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaintenanceUpdate"
            }
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentBrief"
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "MaintenanceUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageHtml": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "ended": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateMaintenanceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer"
          },
          "notifyStart": {
            "type": "boolean"
          },
          "notifyEnd": {
            "type": "boolean"
          },
          "notifyEarly": {
            "type": "boolean"
          },
          "notifyMinutes": {
            "type": "integer"
          },
          "autoStart": {
            "type": "boolean"
          },
          "autoEnd": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/MaintenanceStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "UpdateMaintenanceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/MaintenanceStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "MaintenanceUpdateDetailed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageHtml": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "maintenance": {
            "$ref": "#/components/schemas/MaintenanceBrief"
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "MaintenanceBrief": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentBrief"
            }
          }
        }
      },
      "CreateMaintenanceUpdateRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/MaintenanceStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "UpdateMaintenanceUpdateRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/MaintenanceStatus"
          },
          "notify": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/components/schemas/MaintenanceStatus"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INCIDENT",
              "MAINTENANCE"
            ]
          },
          "name": {
            "type": "string"
          },
          "nameTranslationId": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string"
          },
          "messageTranslationId": {
            "type": "string",
            "nullable": true
          },
          "messageHtml": {
            "type": "string"
          },
          "messageHtmlTranslationId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          },
          "importedFromStatuspage": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateComponent"
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "TemplateComponent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "componentId": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "importedFromStatuspage": {
            "type": "boolean"
          }
        }
      },
      "CreateTemplateRequest": {
        "type": "object",
        "properties": {
          "subdomain": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INCIDENT",
              "MAINTENANCE"
            ]
          },
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "UpdateTemplateRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "INCIDENT",
              "MAINTENANCE"
            ]
          },
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "notify": {
            "type": "boolean"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "translations": {
            "$ref": "#/components/schemas/Translations"
          }
        }
      },
      "DeletedTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "Teammate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "AddTeammateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "TeammateDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "temp": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "use24HourTime": {
            "type": "boolean"
          },
          "enableMagicLinkResendAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oldEmail": {
            "type": "string",
            "nullable": true
          },
          "revokeEmailToken": {
            "type": "string",
            "nullable": true
          },
          "revokeEmailTokenExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "affiliateId": {
            "type": "string",
            "nullable": true
          },
          "affiliateToken": {
            "type": "string",
            "nullable": true
          },
          "use2FA": {
            "type": "boolean"
          },
          "authFactorId": {
            "type": "string",
            "nullable": true
          },
          "mobileConnectionTokenExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Subscriber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "webhook": {
            "type": "string",
            "nullable": true
          },
          "webhookEmail": {
            "type": "string",
            "nullable": true
          },
          "confirmed": {
            "type": "boolean"
          },
          "all": {
            "type": "boolean"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddSubscriberRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "all": {
            "type": "boolean"
          },
          "autoConfirm": {
            "type": "boolean"
          },
          "components": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SubscriberDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "confirmed": {
            "type": "boolean"
          },
          "all": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          },
          "unsubscribeToken": {
            "type": "string"
          },
          "webhook": {
            "type": "string",
            "nullable": true
          },
          "webhookEmail": {
            "type": "string",
            "nullable": true
          },
          "discord": {
            "type": "string",
            "nullable": true
          },
          "discordTeam": {
            "type": "string",
            "nullable": true
          },
          "slack": {
            "type": "string",
            "nullable": true
          },
          "slackTeam": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string"
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "microsoftTeamsWebhook": {
            "type": "string",
            "nullable": true
          },
          "googleChatWebhook": {
            "type": "string",
            "nullable": true
          },
          "googleChatSpace": {
            "type": "string",
            "nullable": true
          },
          "failedAttempts": {
            "type": "integer"
          },
          "approved": {
            "type": "boolean"
          },
          "importedFromStatuspage": {
            "type": "boolean"
          },
          "hideUnsubLink": {
            "type": "boolean"
          },
          "webhookIncidentBody": {
            "type": "string",
            "nullable": true
          },
          "webhookMaintenanceBody": {
            "type": "string",
            "nullable": true
          },
          "webhookComponentBody": {
            "type": "string",
            "nullable": true
          },
          "webhookHttpMethod": {
            "type": "string"
          },
          "webhookHeaders": {
            "type": "object",
            "nullable": true
          },
          "webhookQueryParams": {
            "type": "object",
            "nullable": true
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "RemovedSubscriber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "webhook": {
            "type": "string",
            "nullable": true
          },
          "webhookEmail": {
            "type": "string",
            "nullable": true
          },
          "discord": {
            "type": "string",
            "nullable": true
          },
          "microsoftTeamsWebhook": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "Metric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "order": {
            "type": "integer"
          },
          "suffix": {
            "type": "string"
          },
          "lastDataAt": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datapoint"
            }
          }
        }
      },
      "Datapoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "AddMetricRequest": {
        "type": "object",
        "properties": {
          "subdomain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          }
        }
      },
      "UpdateMetricRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          }
        }
      },
      "AddDatapointRequest": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "AddMultipleDatapointsRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddDatapointRequest"
            }
          }
        }
      },
      "DeletedMetric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "DeletedDatapoints": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "subdomain": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "PublicStatusSummary": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PublicPageInfo"
          },
          "activeIncidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicIncident"
            }
          },
          "activeMaintenances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicMaintenance"
            }
          }
        }
      },
      "PublicPageInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": [
              "UP",
              "HASISSUES",
              "UNDERMAINTENANCE"
            ]
          }
        }
      },
      "PublicIncident": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "INVESTIGATING",
              "IDENTIFIED",
              "MONITORING",
              "RESOLVED"
            ]
          },
          "impact": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "PublicMaintenance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOTSTARTEDYET",
              "INPROGRESS",
              "COMPLETED"
            ]
          },
          "duration": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "AudienceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "teammates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceGroupTeammate"
            }
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceGroupComponent"
            }
          }
        }
      },
      "AudienceGroupTeammate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "audienceGroupId": {
            "type": "string"
          },
          "teammateId": {
            "type": "string"
          },
          "teammate": {
            "$ref": "#/components/schemas/Teammate"
          }
        }
      },
      "AudienceGroupComponent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "audienceGroupId": {
            "type": "string"
          },
          "componentId": {
            "type": "string"
          },
          "component": {
            "$ref": "#/components/schemas/Component"
          }
        }
      },
      "CreateAudienceGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teammates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreatedAudienceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "UpdateAudienceGroupRequest": {
        "type": "object",
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdatedAudienceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "DeletedAudienceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "SecurePageLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "secureLink": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Monitor": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "httpMethod": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "queryParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "basicAuth": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string"
          },
          "assertions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "comparison": {
                  "type": "string"
                },
                "selector": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "locations": {
            "type": "string",
            "enum": [
              "US_EAST_1",
              "EU_CENTRAL_1",
              "AP_NORTHEAST_1",
              "AP_SOUTHEAST_2"
            ]
          },
          "checksInterval": {
            "type": "integer"
          },
          "createComponent": {
            "type": "boolean"
          },
          "createMetric": {
            "type": "boolean"
          },
          "onFail": {
            "type": "object",
            "properties": {
              "createIncident": {
                "type": "boolean"
              },
              "createOutageDuration": {
                "type": "boolean"
              },
              "publishIncident": {
                "type": "boolean"
              },
              "notifySubscribers": {
                "type": "boolean"
              }
            }
          },
          "onRecover": {
            "type": "object",
            "properties": {
              "resolveIncident": {
                "type": "boolean"
              },
              "resolveOutageDuration": {
                "type": "boolean"
              },
              "publishIncident": {
                "type": "boolean"
              },
              "notifySubscribers": {
                "type": "boolean"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateMonitorRequest": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "httpMethod": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "queryParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "basicAuth": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string"
          },
          "assertions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "comparison": {
                  "type": "string"
                },
                "selector": {
                  "type": "string",
                  "nullable": true
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "locations": {
            "type": "string",
            "enum": [
              "US_EAST_1",
              "EU_CENTRAL_1",
              "AP_NORTHEAST_1",
              "AP_SOUTHEAST_2"
            ]
          },
          "checksInterval": {
            "type": "integer"
          },
          "createComponent": {
            "type": "boolean"
          },
          "createMetric": {
            "type": "boolean"
          },
          "onFail": {
            "type": "object",
            "properties": {
              "createIncident": {
                "type": "boolean"
              },
              "createOutageDuration": {
                "type": "boolean"
              },
              "publishIncident": {
                "type": "boolean"
              },
              "notifySubscribers": {
                "type": "boolean"
              }
            }
          },
          "onRecover": {
            "type": "object",
            "properties": {
              "resolveIncident": {
                "type": "boolean"
              },
              "resolveOutageDuration": {
                "type": "boolean"
              },
              "publishIncident": {
                "type": "boolean"
              },
              "notifySubscribers": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "UpdateMonitorRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MonitorResponse": {
        "type": "object",
        "properties": {
          "monitor": {
            "$ref": "#/components/schemas/Monitor"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "MonitorLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "monitorId": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "enum": [
              "US_EAST_1",
              "EU_CENTRAL_1",
              "AP_NORTHEAST_1",
              "AP_SOUTHEAST_2"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isSuccessful": {
            "type": "boolean"
          },
          "isSSLCheck": {
            "type": "boolean"
          },
          "httpStatusCode": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "UP",
              "DOWN",
              "UNKNOWN",
              "DEGRADED"
            ]
          },
          "dnsTime": {
            "type": "number",
            "format": "float"
          },
          "tcpTime": {
            "type": "number",
            "format": "float"
          },
          "tlsTime": {
            "type": "number",
            "format": "float"
          },
          "firstByteTime": {
            "type": "number",
            "format": "float"
          },
          "downloadTime": {
            "type": "number",
            "format": "float"
          },
          "responseTime": {
            "type": "number",
            "format": "float"
          },
          "performanceTime": {
            "type": "number",
            "format": "float"
          },
          "accessibilityScore": {
            "type": "number",
            "format": "float"
          },
          "seoScore": {
            "type": "number",
            "format": "float"
          },
          "bestPracticesScore": {
            "type": "number",
            "format": "float"
          },
          "successfulAssertions": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "OPTIONS"
            ]
          },
          "requestHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "requestBody": {
            "type": "string"
          },
          "responseHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "responseBody": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "assertions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "comparison": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "actual": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "sslDetails": {
            "type": "object",
            "properties": {
              "issuer": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "validFrom": {
                "type": "string",
                "format": "date-time"
              },
              "validTo": {
                "type": "string",
                "format": "date-time"
              },
              "daysUntilExpiration": {
                "type": "integer"
              }
            }
          }
        }
      },
      "CreateMonitorAlertRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "INCIDENT",
              "EMAIL",
              "SMS",
              "SLACK",
              "DISCORD",
              "MICROSOFT_TEAMS",
              "PHONE_CALL",
              "WEBHOOK"
            ]
          },
          "pageId": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "recipientWorkspace": {
            "type": "string"
          },
          "whenFails": {
            "type": "boolean"
          },
          "whenRecovers": {
            "type": "boolean"
          },
          "whenDegrades": {
            "type": "boolean"
          },
          "whenSslExpires": {
            "type": "boolean"
          },
          "sslExpiresInDays": {
            "type": "integer"
          },
          "monitors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "string"
          }
        }
      },
      "UpdateMonitorAlertRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "monitors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MonitorAlertResponse": {
        "type": "object",
        "properties": {
          "monitor": {
            "$ref": "#/components/schemas/MonitorAlert"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "MonitorAlert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INCIDENT",
              "EMAIL",
              "SMS",
              "SLACK",
              "DISCORD",
              "MICROSOFT_TEAMS",
              "PHONE_CALL",
              "WEBHOOK"
            ]
          },
          "recipient": {
            "type": "string"
          },
          "whenFails": {
            "type": "boolean"
          },
          "whenRecovers": {
            "type": "boolean"
          },
          "whenDegrades": {
            "type": "boolean"
          },
          "whenSslExpires": {
            "type": "boolean"
          },
          "sslExpiresInDays": {
            "type": "integer"
          },
          "monitors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "string"
          }
        }
      },
      "CreateMonitorGroupRequest": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "childId": {
            "type": "string"
          }
        }
      },
      "UpdateMonitorGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "MonitorGroupResponse": {
        "type": "object",
        "properties": {
          "monitor": {
            "$ref": "#/components/schemas/MonitorGroup"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "MonitorGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "collapsed": {
            "type": "boolean"
          },
          "monitors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "groupId": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "order": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "componentId": {
            "type": "string"
          }
        }
      },
      "RoutingRulesResponse": {
        "type": "object",
        "properties": {
          "routingRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoutingRule"
            }
          }
        }
      },
      "RoutingRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "assertions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assertion"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": "integer"
          }
        }
      },
      "Assertion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "routingRuleId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AssertionType"
          },
          "comparison": {
            "$ref": "#/components/schemas/ComparisonType"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Action": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "routingRuleId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "targetId": {
            "type": "string"
          }
        }
      },
      "CreateRoutingRuleRequest": {
        "type": "object",
        "properties": {
          "routingRule": {
            "type": "object",
            "properties": {
              "assertions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Assertion"
                }
              },
              "actions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Action"
                }
              },
              "order": {
                "type": "integer"
              },
              "siteId": {
                "type": "string"
              }
            }
          }
        }
      },
      "UpdateRoutingRuleRequest": {
        "type": "object",
        "properties": {
          "routingRule": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "assertions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Assertion"
                }
              },
              "order": {
                "type": "integer"
              },
              "siteId": {
                "type": "string"
              }
            }
          }
        }
      },
      "RoutingRuleResponse": {
        "type": "object",
        "properties": {
          "routingRule": {
            "$ref": "#/components/schemas/RoutingRule"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DeleteRoutingRuleResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ActionType": {
        "type": "string",
        "enum": [
          "NOTIFY_TEAM",
          "NOTIFY_WORKSPACE_MEMBER",
          "NOTIFY_CURRENT_ON_CALL_USER",
          "NOTIFY_NEXT_ON_CALL_USER",
          "NOTIFY_ALL_ON_CALL_MEMBERS"
        ]
      },
      "AssertionType": {
        "type": "string",
        "enum": [
          "IMPACT",
          "TITLE",
          "DESCRIPTION",
          "AFFECTED_COMPONENTS"
        ]
      },
      "ComparisonType": {
        "type": "string",
        "enum": [
          "EQUALS",
          "NOT_EQUALS",
          "IS_EMPTY",
          "NOT_EMPTY",
          "GREATER_THAN",
          "GREATER_THAN_OR_EQUALS",
          "LESS_THAN",
          "LESS_THAN_OR_EQUALS",
          "CONTAINS",
          "NOT_CONTAINS",
          "HAS_KEY",
          "NOT_HAS_KEY",
          "HAS_VALUE",
          "NOT_HAS_VALUE",
          "IS_NULL",
          "NOT_NULL",
          "STARTS_WITH",
          "ENDS_WITH"
        ]
      },
      "EscalationPoliciesResponse": {
        "type": "object",
        "properties": {
          "escalationPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationPolicy"
            }
          }
        }
      },
      "EscalationPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "siteId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationRule"
            }
          },
          "repeat": {
            "type": "boolean"
          },
          "repeatCount": {
            "type": "integer"
          },
          "repeatDelay": {
            "type": "integer"
          },
          "revertAcknowledgement": {
            "type": "boolean"
          },
          "autoResolveIncidentsAfterRepeat": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EscalationRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "escalationPolicyId": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "condition": {
            "$ref": "#/components/schemas/EscalationRuleCondition"
          },
          "delayInMins": {
            "type": "integer"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationAction"
            }
          }
        }
      },
      "EscalationAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ruleId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EscalationActionType"
          },
          "targetId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateEscalationPolicyRequest": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateEscalationRule"
            }
          },
          "repeat": {
            "type": "boolean"
          },
          "repeatDelay": {
            "type": "integer"
          },
          "repeatCount": {
            "type": "integer"
          },
          "autoResolveIncidentsAfterRepeat": {
            "type": "boolean"
          },
          "revertAcknowledgement": {
            "type": "boolean"
          }
        }
      },
      "CreateEscalationRule": {
        "type": "object",
        "properties": {
          "delayInMins": {
            "type": "integer"
          },
          "condition": {
            "$ref": "#/components/schemas/EscalationRuleCondition"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateEscalationAction"
            }
          }
        }
      },
      "CreateEscalationAction": {
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EscalationActionType"
          }
        }
      },
      "UpdateEscalationPolicyRequest": {
        "$ref": "#/components/schemas/CreateEscalationPolicyRequest"
      },
      "EscalationPolicyResponse": {
        "type": "object",
        "properties": {
          "escalationPolicy": {
            "$ref": "#/components/schemas/EscalationPolicy"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DeleteEscalationPolicyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "EscalationRuleCondition": {
        "type": "string",
        "enum": [
          "NOT_ACKNOWLEDGED"
        ]
      },
      "EscalationActionType": {
        "type": "string",
        "enum": [
          "NOTIFY_TEAM",
          "NOTIFY_WORKSPACE_MEMBER",
          "NOTIFY_CURRENT_ON_CALL_USER",
          "NOTIFY_NEXT_ON_CALL_USER",
          "NOTIFY_ALL_ON_CALL_MEMBERS"
        ]
      },
      "CreateOnCallScheduleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "onCallShifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnCallShiftRequest"
            }
          }
        }
      },
      "UpdateOnCallScheduleRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ScheduleStatus"
          },
          "onCallShifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnCallShift"
            }
          }
        }
      },
      "OnCallScheduleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ScheduleStatus"
          },
          "onCallShifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnCallShift"
            }
          }
        }
      },
      "OnCallShift": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftMember"
            }
          },
          "rotationType": {
            "$ref": "#/components/schemas/RotationType"
          },
          "customRotationTypeValue": {
            "type": "integer",
            "nullable": true
          },
          "customRotationTypeUnit": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "restrictionType": {
            "$ref": "#/components/schemas/RestrictionType"
          },
          "timeOfDayRestrictionStartTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "timeOfDayRestrictionEndTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "timeIntervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeInterval"
            }
          }
        }
      },
      "OnCallShiftRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftMemberRequest"
            }
          },
          "rotationType": {
            "$ref": "#/components/schemas/RotationType"
          },
          "customRotationTypeValue": {
            "type": "integer",
            "nullable": true
          },
          "customRotationTypeUnit": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "restrictionType": {
            "$ref": "#/components/schemas/RestrictionType"
          },
          "timeOfDayRestrictionStartTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "timeOfDayRestrictionEndTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "timeIntervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeInterval"
            }
          }
        }
      },
      "ShiftMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "order": {
            "type": "integer"
          },
          "color": {
            "type": "string"
          },
          "workspaceMember": {
            "$ref": "#/components/schemas/WorkspaceMember"
          }
        }
      },
      "ShiftMemberRequest": {
        "type": "object",
        "properties": {
          "workspaceMemberId": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "WorkspaceMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "TimeInterval": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "startDay": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "startDayTime": {
            "type": "string",
            "format": "time"
          },
          "endDay": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "endDayTime": {
            "type": "string",
            "format": "time"
          }
        }
      },
      "RestrictionType": {
        "type": "string",
        "enum": [
          "NONE",
          "TIMEOFDAY",
          "TIMEINTERVALS"
        ]
      },
      "RotationType": {
        "type": "string",
        "enum": [
          "DAILY",
          "WEEKLY",
          "CUSTOM"
        ]
      },
      "DayOfWeek": {
        "type": "string",
        "enum": [
          "SATURDAY",
          "SUNDAY",
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY"
        ]
      },
      "ScheduleStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ]
      }
    }
  }
}